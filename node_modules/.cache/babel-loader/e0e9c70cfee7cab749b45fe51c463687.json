{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP5CD\\\\OneDrive\\\\Desktop\\\\dashboard\\\\wibe-studio-starter-files\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { LocomotiveScrollProvider } from 'react-locomotive-scroll';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\nimport { dark } from './styles/Themes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const containerRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: dark,\n      children: /*#__PURE__*/_jsxDEV(LocomotiveScrollProvider, {\n        options: {\n          smooth: true // ... all available Locomotive Scroll instance options \n\n        },\n        watch: [//..all the dependencies you want to watch to update the scroll.\n          //  Basicaly, you would want to watch page/location changes\n          //  For exemple, on Next.js you would want to watch properties like `router.asPath` (you may want to add more criterias if the instance should be update on locations with query parameters)\n        ],\n        containerRef: containerRef,\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          \"data-scroll-container\": true,\n          ref: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"5okL0DAk6Atnb3+Rru+wGBWyP+4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HP5CD/OneDrive/Desktop/dashboard/wibe-studio-starter-files/src/App.js"],"names":["useRef","LocomotiveScrollProvider","ThemeProvider","GlobalStyles","dark","App","containerRef","smooth"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,wBAAT,QAAyC,yBAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,YAAY,GAAGN,MAAM,CAAC,IAAD,CAA3B;AACA,sBACE;AAAA,2BACA,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEI,IAAtB;AAAA,6BACA,QAAC,wBAAD;AACF,QAAA,OAAO,EACL;AACEG,UAAAA,MAAM,EAAE,IADV,CAEE;;AAFF,SAFA;AAOF,QAAA,KAAK,EACH,CACE;AACA;AACA;AAHF,SARA;AAcF,QAAA,YAAY,EAAED,YAdZ;AAAA,+BAgBF;AAAM,uCAAN;AAA4B,UAAA,GAAG,EAAEA;AAAjC;AAAA;AAAA;AAAA;AAAA;AAhBE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AA0BD;;GA5BQD,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import { useRef } from 'react';\r\nimport { LocomotiveScrollProvider } from 'react-locomotive-scroll';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport GlobalStyles from './styles/GlobalStyles';\r\nimport { dark } from './styles/Themes';\r\n\r\n\r\nfunction App() {\r\n  const containerRef = useRef(null)\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={dark}>\r\n    <LocomotiveScrollProvider\r\n  options={\r\n    {\r\n      smooth: true,\r\n      // ... all available Locomotive Scroll instance options \r\n    }\r\n  }\r\n  watch={\r\n    [\r\n      //..all the dependencies you want to watch to update the scroll.\r\n      //  Basicaly, you would want to watch page/location changes\r\n      //  For exemple, on Next.js you would want to watch properties like `router.asPath` (you may want to add more criterias if the instance should be update on locations with query parameters)\r\n    ]\r\n  }\r\n  containerRef={containerRef}\r\n>\r\n  <main data-scroll-container ref={containerRef}>\r\n    {/* ...your app */}\r\n  </main>\r\n</LocomotiveScrollProvider>\r\n    </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}